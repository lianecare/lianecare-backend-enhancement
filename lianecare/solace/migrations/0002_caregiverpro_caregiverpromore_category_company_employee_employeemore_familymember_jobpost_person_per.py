# Generated by Django 3.1.7 on 2021-03-11 20:10

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.functions
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import lianecare.solace.fields
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0002_auto_20210311_2010'),
        ('solace', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Codice')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('icon', models.CharField(blank=True, default=None, max_length=25, null=True, verbose_name='Icona')),
                ('active', models.BooleanField(default=True, verbose_name='Attiva?')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorie',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=django.contrib.postgres.functions.RandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=8, null=None, unique=True, verbose_name='Codice')),
                ('name', models.CharField(max_length=155, verbose_name='Nome')),
                ('address', models.CharField(max_length=255, verbose_name='Indirizzo')),
                ('city', models.CharField(max_length=105, verbose_name='Città')),
                ('postcode', models.CharField(max_length=5, verbose_name='Codice postale')),
                ('referent', models.CharField(blank=True, max_length=55, verbose_name='Referente')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('license_number', models.IntegerField(default=100, verbose_name='n. license')),
            ],
            options={
                'verbose_name': 'Compagnia',
                'verbose_name_plural': 'Compagnie',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='photo-profile/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CaregiverPro',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=20, verbose_name='Codice')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Descrizione')),
                ('active', models.BooleanField(default=True, verbose_name='Attiva?')),
                ('requirement', models.BooleanField(default=False, verbose_name='Certificazioni?')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='solace.category')),
            ],
            options={
                'verbose_name': 'Sottocategoria',
                'verbose_name_plural': 'Sottocategorie',
                'ordering': ('name',),
                'unique_together': {('parent', 'code')},
            },
        ),
        migrations.CreateModel(
            name='PersonMore',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(choices=[(None, ''), ('FEMALE', 'Female'), ('MALE', 'Male')], default='', max_length=25, verbose_name='Sesso')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('family_bio', models.TextField(blank=True, verbose_name='Biografia famigliare')),
                ('photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, default='', upload_to='persons')),
                ('how_know_us', models.CharField(blank=True, choices=[(None, ''), ('GOOGLE', 'Google'), ('YOUTUBE', 'Youtube'), ('FORUM', 'Parenting Group or Forum'), ('FACEBOOK', 'Facebook'), ('LINKEDIN', 'Linkedin'), ('BANNER', 'Banner Ad'), ('FRIENDS', 'Friends or Family'), ('PRESS', 'Press Coverage (News, Magazine, Blog)'), ('OTHER', 'Other')], max_length=35)),
                ('newsletter', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Indirizzo')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='Città')),
                ('postcode', models.CharField(blank=True, default=None, max_length=5, null=True, validators=[django.core.validators.RegexValidator(code='invalid_postcode', message='The postcode is not valid.', regex='[\\d]{5}')], verbose_name='CAP')),
                ('region', models.CharField(blank=True, default=None, max_length=65, null=True, verbose_name='Regione')),
                ('country', models.CharField(blank=True, default=None, max_length=65, null=True, verbose_name='Nazione')),
                ('latitude', models.FloatField(blank=True, default=None, null=True)),
                ('longitude', models.FloatField(blank=True, default=None, null=True)),
                ('employer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='solace.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Persone',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=155, verbose_name='Nome')),
                ('birthday', models.DateField(default=None, verbose_name='Data di nascita')),
                ('gender', models.CharField(choices=[(None, ''), ('FEMALE', 'Female'), ('MALE', 'Male')], default='', max_length=25, verbose_name='Sesso')),
                ('diagnosis', lianecare.solace.fields.ChoiceArrayField(base_field=models.CharField(choices=[(None, ''), ('ADD', 'Add'), ('ADHD', 'Adhd'), ('ASPERGERS', 'Aspergers'), ('ASTHMA', 'Asthma'), ('AUTISM', 'Autism'), ('BLINDNESS', 'Blindness / Visual Impairment'), ('CANCER', 'Cancer'), ('CELIAC', 'Celiac'), ('CEREBRAL_PALSY', 'Cerebral Palsy'), ('CYSTIC_FIBROSIS', 'Cystic Fibrosis'), ('DEAFNESS', 'Deafness'), ('DEVELOPMENT_DELAYS', 'Developmental Delays'), ('DIABETES', 'Diabetes'), ('DOWN', 'Down Syndrome'), ('DWARFISM', 'Dwarfism'), ('DYSLEXIA', 'Dyslexia'), ('EPILEPSY', 'Epilepsy'), ('FETAL_SYNDROME', 'Fetal Alcohol Syndrome'), ('FOOD_ALLERGIES', 'Food Allergies'), ('HEART_DEFECTS', 'Heart Defects'), ('MENTAL_ILLNESS', 'Mental Illness'), ('MOBILITY_CHALLENGES', 'Mobility Challenges'), ('SCLEROSIS', 'Multiple Sclerosis'), ('MUSCOLAR_DYSTROPHY', 'Muscular Dystrophy'), ('OBESITY', 'Obesity'), ('SEIZURE', 'Seizure Disorder'), ('SENSORY_DISORDER', 'Sensory Integration Disorder'), ('SPEECH_DELAY', 'Speech Delay')], max_length=25, verbose_name='Patologie'), blank=True, default=list, size=None)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_members', to='solace.person')),
            ],
            options={
                'verbose_name': 'Membro famigliare',
                'verbose_name_plural': 'Membri famigliari',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CaregiverProMore',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(choices=[(None, ''), ('FEMALE', 'Female'), ('MALE', 'Male')], default='', max_length=25, verbose_name='Sesso')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefono')),
                ('nationality', models.CharField(blank=True, default='', max_length=100, verbose_name='Nazionalità')),
                ('bio', models.TextField(blank=True, verbose_name='Presentazione')),
                ('photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, default=None, null=True, upload_to='caregiverpro')),
                ('how_know_us', models.CharField(blank=True, choices=[(None, ''), ('GOOGLE', 'Google'), ('YOUTUBE', 'Youtube'), ('FORUM', 'Parenting Group or Forum'), ('FACEBOOK', 'Facebook'), ('LINKEDIN', 'Linkedin'), ('BANNER', 'Banner Ad'), ('FRIENDS', 'Friends or Family'), ('PRESS', 'Press Coverage (News, Magazine, Blog)'), ('OTHER', 'Other')], max_length=35)),
                ('availability', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=7), default=[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]], size=4)),
                ('has_car', models.BooleanField(blank=True, default=None, null=True, verbose_name='Automunita?')),
                ('driving_license', models.BooleanField(blank=True, default=None, null=True, verbose_name='Ha la patente?')),
                ('is_graduate', models.BooleanField(blank=True, default=None, null=True, verbose_name='Hai una laurea in ambito medico?')),
                ('is_certificated', models.BooleanField(blank=True, default=None, null=True, verbose_name='Hai una certificazione in ambito medico?')),
                ('is_smoker', models.BooleanField(blank=True, default=None, null=True, verbose_name='Fuma?')),
                ('first_aid', models.BooleanField(blank=True, default=None, null=True, verbose_name='Primo soccorso')),
                ('child_trainer', models.BooleanField(blank=True, default=None, null=True, verbose_name="Formatore per l'infanzia")),
                ('identity_checked', models.BooleanField(blank=True, default=None, null=True, verbose_name='Identità verificata?')),
                ('skills', django.contrib.postgres.fields.hstore.HStoreField(blank=True, default=None, null=True)),
                ('address', models.CharField(default=None, max_length=255, verbose_name='Indirizzo')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='Città')),
                ('postcode', models.CharField(blank=True, default='00100', max_length=5, validators=[django.core.validators.RegexValidator(code='invalid_zipcode', message='Il codice postale non è valido.', regex='[\\d]{5}')], verbose_name='CAP')),
                ('region', models.CharField(blank=True, max_length=65, verbose_name='Regione')),
                ('country', models.CharField(blank=True, max_length=65, verbose_name='Nazione')),
                ('latitude', models.FloatField(blank=True, default=None, null=True, verbose_name='Latitudine')),
                ('longitude', models.FloatField(blank=True, default=None, null=True, verbose_name='Longitudine')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Caregiver PRO',
                'verbose_name_plural': 'Caregivers PRO',
            },
        ),
        migrations.CreateModel(
            name='EmployeeMore',
            fields=[
            ],
            options={
                'verbose_name': 'Dipendente',
                'verbose_name_plural': 'Dipendenti',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('solace.personmore',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('experience', models.PositiveIntegerField(default=0, verbose_name='Anni di esperienza')),
                ('price', models.FloatField(verbose_name='Prezzo medio')),
                ('has_references', models.BooleanField(blank=True, default=None, null=True, verbose_name='Referenze?')),
                ('max_distance', models.PositiveIntegerField(blank=True, default=10, null=True, verbose_name='Distanza max (km)')),
                ('note', models.TextField(blank=True, default='', verbose_name='Note aggiuntive')),
                ('is_active', models.BooleanField(default=True, verbose_name='Attivo?')),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solace.caregiverpro')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solace.category')),
                ('subcategories', models.ManyToManyField(related_name='Services', to='solace.SubCategory')),
            ],
            options={
                'verbose_name': 'Servizio',
                'verbose_name_plural': 'Servizi',
                'unique_together': {('caregiver', 'category')},
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start_date', models.DateField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solace.category')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='solace.person')),
                ('subcategories', models.ManyToManyField(related_name='Necessità', to='solace.SubCategory')),
            ],
            options={
                'verbose_name': 'Job Post',
                'verbose_name_plural': 'Job Posts',
                'unique_together': {('person', 'category')},
            },
        ),
    ]
